#!/bin/bash

PROJECT_NAME=$(pwd | rev | cut -d '/' -f 1 | rev)
PROJECT_ROOT_DIR=$(pwd)
# DOCKER_IMAGE_NAME=mbenabda/esp8266-rtos-sdk
DOCKER_IMAGE_NAME=esp-container

echo "$PROJECT_NAME"
echo "$PROJECT_ROOT_DIR"

if [ $# -eq 1 ] && [ $1 == "build" ];
then
  echo "Compilando projeto $PROJECT_NAME"
  #Build your project
  docker run -it --rm -v $PROJECT_ROOT_DIR:/project -w /project $DOCKER_IMAGE_NAME make
fi
if [ $# -eq 1 ] && [ $1 == "flash" ];
then
  echo "Gravando projeto $PROJECT_NAME"
  #Flash your ESP chip
  docker run -it --rm -v $PROJECT_ROOT_DIR:/project --privileged -v /dev:/dev -w /project $DOCKER_IMAGE_NAME make flash
fi
if [ $# -eq 1 ] && [ $1 == "monitor" ];
then
  echo "Abrindo monitor para projeto $PROJECT_NAME"
  #Monitor the ESP chip's serial output
  docker run -it --rm -v $PROJECT_ROOT_DIR:/project --privileged -v /dev:/dev -w /project $DOCKER_IMAGE_NAME make monitor
fi
if [ $# -eq 1 ] && [ $1 == "clean" ];
then
  echo "Limpando arquivos compilado do projeto $PROJECT_NAME"
  sudo rm -r build
  sudo rm sdkconfig sdkconfig.old
fi
if [ $# -eq 1 ] && [ $1 == "include" ];
then
  echo "Gerando includePath com base em ~/Downloads/ESP8266_RTOS_SDK/"
  for a in $(find ~/Downloads/ESP8266_RTOS_SDK/ -type d | grep include); do
    echo "\"$a\","
  done
fi
if [ $# -eq 2 ] && [ $1 == "flash" ] && [ $2 == "monitor" ];
then
  #Flash and Monitor the ESP
  echo "Gravando projeto $PROJECT_NAME"
  docker run -it --rm -v $PROJECT_ROOT_DIR:/project --privileged -v /dev:/dev -w /project $DOCKER_IMAGE_NAME make flash monitor
fi